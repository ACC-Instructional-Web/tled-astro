---
// export const prerender = false;

import Layout from '~/layouts/Layout.astro';
import Header from '../components/widgets/Header.astro';
import Footer from '../components/widgets/Footer.astro';

const title = 'Search Results';
let results = {};

const searchQuery = Astro.url.searchParams.get('search') || '';
// const searchQuery = 'instruction';
console.log('searchQuery: ', searchQuery);

const googleApiKey = import.meta.env.GOOGLE_API_KEY;
const cx = '761e1a557e63f4f37';
const response = await fetch(
  `https://www.googleapis.com/customsearch/v1/?q=${searchQuery}&cx=${cx}&key=${googleApiKey}`
);
const data = await response.json();
console.log('DATA :>> ', data);

const errors = data?.error?.errors;
if (errors) {
  console.log('data.error.errors :>> ', data.error.errors);
  // return { error: true };
}

const spelling = data?.spelling;
if (spelling) {
  console.log('Corrected Query: ', spelling.correctedQuery);
  const { correctedQuery } = spelling;
  const suggestedResults = await fetch(
    `https://www.googleapis.com/customsearch/v1/?q=${correctedQuery}&cx=${cx}&key=${googleApiKey}`
  );
  const suggestedData = await suggestedResults.json();
  console.log('suggestedData :>> ', suggestedData);
  results = {
    items: suggestedData.items,
    query: searchQuery,
    correctedQuery,
  };
} else {
  results = {
    items: data.items,
    query: searchQuery,
    correctedQuery: null,
  };
}
const { items, query, correctedQuery } = results;
//   return { results: results.data.items, query: null, correctedQuery: null }
// } catch (e) {
//   return { error: true }
// }
---

<Layout metadata={{ title }}>
  <Header />
  <h1>Search Results</h1>
  {
    results?.correctedQuery && (
      <div>
        No results found for <span class="bold">"{results?.query}"</span>. Showing results for{' '}
        <span class="bold">"{correctedQuery}"</span> instead.
      </div>
    )
  }
  {
    items &&
      items.map((item) => (
        <div class="py-4">
          <h2>
            <a href={item.link}>{item.title}</a>
          </h2>
          <span set:html={item.htmlSnippet} />
        </div>
      ))
  }
  <Footer />
</Layout>
<!-- 
export default SearchPage

const SearchResult = styled.div`
  padding: 1rem 0;

  a {
    text-decoration: underline;
  }

  b {
    color: purple;
  }
`

const Query = styled.span`
  color: purple;
  font-weight: bold;
` -->
